@using System.Web.Mvc
@using System.Web.Mvc.Html
@model TPM.Models.ViewModel.AsignarPersonalEspViewModel

@{
    ViewBag.Title = "AsignarPersonalEsp";
    Layout = "~/Views/Shared/_Layout.cshtml";
    WebGrid gridPersonalEsp = new WebGrid(Model.ListaPersonalEsp, rowsPerPage: 10);
    WebGrid gridPersonalEspAsignados = new WebGrid(Model.ListaPersonalEspsAsignados, rowsPerPage: 10, fieldNamePrefix: "order");
}

<div class="panel panel-primary">
  <div class="panel-heading">Asignar Personal Especializado a Equipo 
      <div class="pull-right">
          <a class="link-panel" href="/Equipo">
             <img src="~/Images/boton_volver.png" />
              Volver
          </a>
      </div>
  </div>
  <div class="panel-body">

@using (Html.BeginForm(null, null, FormMethod.Get))
{
    <h2>
        Equipo: @Html.DisplayFor(model => model.EquipoSeleccionado.NombreEquipo) 
    </h2>
    
    @Html.ValidationSummary(true)

    var personalEspAsig = Model.ListaPersonalEspsAsignados;
    if (personalEspAsig.Count > 0)
    {

        @gridPersonalEspAsignados.GetHtml(
            fillEmptyRows: false,
            alternatingRowStyle: "fila-alternativa",
            headerStyle: "encabezado-grid",
            footerStyle: "pie-grid",
            mode: WebGridPagerModes.All,
            firstText: "<< Primera",
            previousText: "< Anterior",
            nextText: "Siguiente >",
            lastText: "Última >>",
            tableStyle: "table table-striped",

             columns: new[]
             {
                 gridPersonalEspAsignados.Column("Nombre"),
                 gridPersonalEspAsignados.Column("Apellido"),
                 gridPersonalEspAsignados.Column("EspecialidadNombre", "Especialidad"),
                 gridPersonalEspAsignados.Column("",
                     header: "Acciones",
                     format: @<text>
                                  <input type="button" value="Borrar" id=@item.Id onClick=" borrarPersonal(@item.Id) "/>
                              </text>
                     )
             })
     }
    else
    {
    <div>@Html.DisplayName("Este equipo no tiene asignado ningun Personal")</div>
    }
    
    <h3>@Html.DisplayName("Personal Especializado")</h3>
    <div class="pull-right">
          <a class="link-panel" href="/PersonalEsp/Create">
              <img src="~/Images/boton_nuevo.png" />
              Nuevo Personal
          </a>
      </div>
    <div>
        @Html.Label("Nombre")
        @Html.TextBoxFor(model => model.NombreFiltro)
    </div>
    <div>
        @Html.Label("Apellido")
        @Html.TextBoxFor(model => model.ApellidoFiltro)
    </div>  

    @Html.HiddenFor(model => model.EquipoSeleccionado.Id, new { id = "hidden" })

    <input type="submit" value="Buscar" />
    var personalEsp = Model.ListaPersonalEsp;
    if (personalEsp.Count > 0)
    {
        @gridPersonalEsp.GetHtml(
            fillEmptyRows: false,
            alternatingRowStyle: "fila-alternativa",
            headerStyle: "encabezado-grid",
            footerStyle: "pie-grid",
            mode: WebGridPagerModes.All,
            firstText: "<< Primera",
            previousText: "< Anterior",
            nextText: "Siguiente >",
            lastText: "Última >>",
            tableStyle: "table table-striped",


            columns: new[]
            {
                gridPersonalEsp.Column("Nombre"),
                gridPersonalEsp.Column("Apellido"),
                gridPersonalEspAsignados.Column("EspecialidadNombre", "Especialidad"),
                gridPersonalEsp.Column("",
                    header: "Acciones",
                    format: @<text>
                                 <input type="button" value="Asignar" id=@item.Id onClick=" asignarPersonal(@item.Id) "/>
                             </text>
                    )
            })
    }
    else
    {
    <div>@Html.DisplayName("No se han encontrado resultados")</div>
    }

    <script type="text/javascript">
        var PersonalAsignados = [];
        var PersonalEquipoEliminar = [];

        function asignarPersonal(idParam) {
            $('.btnPrint').removeClass('disable');
            $('.btnPrint').addClass('enable');
            var equipoId = $('#hidden').val();
            var datos = "{'IdPersonalEsp':'"+ idParam +"','IdEquipo':'" + equipoId + "'}";

            $.ajax({
                url: '@Url.Action("AsignarPersonal", "Equipo")',
                type: 'POST',
                data: datos,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    location.href="";
                },
                error: function (jqXHR, textStatus, error) {

                    alert("error: " + jqXHR.responseText);
                }
            });
     }
        function borrarPersonal(idParam) {
            var r = confirm("Seguro desea eliminar este personal del equipo?");
            if(r == true){
                $('.btnPrint').removeClass('disable');
                $('.btnPrint').addClass('enable');
                var equipoId = $('#hidden').val();
                var datos = "{'IdPersonalEsp':'"+ idParam +"','IdEquipo':'" + equipoId + "'}";

                $.ajax({

                    url: '@Url.Action("BorrarPersonalEquipo", "Equipo")',
                type: 'POST',
                data: datos,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    location.href="";
                },
                error: function (jqXHR, textStatus, error) {

                    alert("error: " + jqXHR.responseText);
                }
            });
            }
        }

</script>
}