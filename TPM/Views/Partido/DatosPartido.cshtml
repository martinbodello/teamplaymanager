@using System.Web.Mvc
@using System.Web.Mvc.Html
@model TPM.Models.Partido
@using System.Web.Helpers
@{
    ViewBag.Title = "DatosPartido";
    Layout = "~/Views/Shared/_Layout.cshtml";
    WebGrid gridDatosJugadores = new WebGrid(Model.JugadoresPartidoList, rowsPerPage: 17, ajaxUpdateContainerId: "grid", canSort: false, canPage: false);
    WebGrid gridGolesPartido = new WebGrid(Model.GolesPartidoList, rowsPerPage: 17, canSort: false, canPage: false);
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Datos Partido
        <div class="pull-right">
            <a class="link-panel" href="/Partido">
                <img src="~/Images/boton_volver.png" />
                Volver
            </a>
        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("DatosPartido", "Partido", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
           int rowNum = 0;  // Nº de fila Grilla Jugadores
           int rowNumG = 0;  // Nº de fila Grilla Goles
            
           @*<input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />*@

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Partido</legend>
                <div class="titleSeccion">Planilla de partido</div>
                <div class="row">
                    <div class="col-xs-6">
                        <p><strong>Partido jugado vs:</strong> @Model.Rival</p>
                        <p><strong>Torneo:</strong> @Model.TemporadaNombre</p>
                        <p><strong>Cancha de:</strong> @Model.Cancha</p>
                        <p><strong>Fecha campeonato:</strong> Nº @Model.NumeroFecha</p>
                    </div>
                    <div class="col-xs-6" style="text-align: right;">
                        <p><strong>Fecha:</strong> @Model.Fecha</p>
                        <p><strong>Categoría: </strong>@Model.EquipoNombre <strong>Año: </strong>@Model.CategoriasString</p>
                        <p><strong>Horario:</strong> @Model.Hora</p>
                        <p><strong>Condición: </strong>@Model.Condicion</p>
                    </div>
                </div>
                <div class="row">
                    <p><strong>Resultado Final:</strong>
                        @if (Model.Condicion.Trim() == "Local")
                        {
                            @Model.EquipoNombre
                            <input type="text" id="GolesPropiosString" name="GolesPropiosString" value="@Model.GolesPropiosString"/>
                            <label>VS</label>
                            @Model.Rival
                            <input type="text" id="GolesRivalString" name="GolesRivalString" value="@Model.GolesRivalString"/>
                        }
                        else
                        {
                            @Model.Rival
                            <input type="text" id="GolesRivalString" name="GolesRivalString" value="@Model.GolesRivalString"/>
                            <label>VS</label>
                            @Model.EquipoNombre
                            <input type="text" id="GolesPropiosString" name="GolesPropiosString" value="@Model.GolesPropiosString"/>
                        }
                    </p>
                </div> 
                <div>
                   <p><strong>Minutos Jugados:</strong> <input type="text" id="DuracionString" name="DuracionString" value="@Model.DuracionString"/>
                </div>        
                

                <div id="grid">       
                            @gridDatosJugadores.GetHtml(
                            headerStyle: "encabezado-grid",
                            tableStyle: "table table-striped",
                            fillEmptyRows: false,
                            footerStyle: "pie-grid",
                            alternatingRowStyle: "fila-alternativa",
                            
                            columns:
                                gridDatosJugadores.Columns
                                (
                                gridDatosJugadores.Column("NumeroCamiseta", "Nº", format: item => rowNum = rowNum + 1),
                                gridDatosJugadores.Column("Nombre"),
                                gridDatosJugadores.Column("Apellido"),                                                                                                  
                                gridDatosJugadores.Column("MinutosJugadosString","M J", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinutosJugadosString", (object)item.MinutosJugadosString)),
                                gridDatosJugadores.Column("CalificacionString", "CALIF", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].CalificacionString", (object)item.CalificacionString)),
                                gridDatosJugadores.Column("CambioString", "CAMBIO" , format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].CambioString", (object)item.CambioString)),
                                gridDatosJugadores.Column("GolString","Goles", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].GolString", (object)item.GolString)),
                                gridDatosJugadores.Column("MinPrimeraAmarillaString","A1", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinPrimeraAmarillaString", (object)item.MinPrimeraAmarillaString)),
                                gridDatosJugadores.Column("MinSegundaAmarillaString","A2", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinSegundaAmarillaString", (object)item.MinSegundaAmarillaString)),
                                gridDatosJugadores.Column("MinRojaString","R", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinRojaString", (object)item.MinRojaString)),
                                gridDatosJugadores.Column("Observaciones", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].CambioString", (object)item.Observaciones))
                               
                                ), mode: WebGridPagerModes.Numeric)    
                </div>        
                
                @*<div id="grid">       
                            @gridGolesPartido.GetHtml(
                            headerStyle: "encabezado-grid",
                            tableStyle: "table table-striped",
                            fillEmptyRows: false,
                            footerStyle: "pie-grid",
                            alternatingRowStyle: "fila-alternativa",
                            
                            columns:
                                gridGolesPartido.Columns
                                (
                                gridGolesPartido.Column("Nombre"),
                                gridGolesPartido.Column("Apellido"),                                                                                                  
                                gridGolesPartido.Column("MinutosJugadosString","M J", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinutosJugadosString", (object)item.MinutosJugadosString)),
                                gridGolesPartido.Column("CalificacionString", "CALIF", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].CalificacionString", (object)item.CalificacionString))            
                               
                                ), mode: WebGridPagerModes.Numeric)    
                    </div>              *@

                <input class="btn btn-primary" name="accion" type="submit" value="Guardar" />

            </fieldset>
        }
    </div>
</div>
