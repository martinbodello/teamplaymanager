@using System.Web.Mvc
@using System.Web.Mvc.Html
@model TPM.Models.Partido
@using System.Web.Helpers
@using TPM.Models
@{
    ViewBag.Title = "DatosPartido";
    Layout = "~/Views/Shared/_Layout.cshtml";
    WebGrid gridDatosJugadores = new WebGrid(Model.JugadoresPartidoList, rowsPerPage: 17, ajaxUpdateContainerId: "grid", canSort: false, canPage: false);
    WebGrid gridGolesPartido = new WebGrid(Model.GolesPartidoList, rowsPerPage: 17, canSort: false, canPage: false);
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Datos Partido
        <div class="pull-right">
            <a class="link-panel" href="/Partido">
                <img src="~/Images/boton_volver.png" />
                Volver
            </a>
        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("DatosPartido", "Partido", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
           int rowNum = 0;  // Nº de fila Grilla Jugadores
           int rowNumG = 0;  // Nº de fila Grilla Goles
            <input type="hidden" name="AbrirPopup" id="AbrirPopup" value="@Model.AbrirPopup" />
           @*<input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />*@
            @Html.HiddenFor(model => model.PartidoId, new { id = "hidden" })

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Partido</legend>
                <div class="titleSeccion">Planilla de partido</div>
                <div class="row">
                    <div class="col-xs-6">
                        <p><strong>Partido jugado vs:</strong> @Model.Rival</p>
                        <p><strong>Torneo:</strong> @Model.TemporadaNombre</p>
                        <p><strong>Cancha de:</strong> @Model.Cancha</p>
                        <p><strong>Fecha campeonato:</strong> Nº @Model.NumeroFecha</p>
                    </div>
                    <div class="col-xs-6" style="text-align: right;">
                        <p><strong>Fecha:</strong> @Model.Fecha</p>
                        <p><strong>Categoría: </strong>@Model.EquipoNombre <strong>Año: </strong>@Model.CategoriasString</p>
                        <p><strong>Horario:</strong> @Model.Hora</p>
                        <p><strong>Condición: </strong>@Model.Condicion</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12" style="text-align: center">
                        <p><strong style="font-size:18px">Resultado Final</strong><br/>
                            @if (Model.Condicion.Trim() == "Local")
                            {
                                @Model.EquipoNombre
                                <input type="text" id="GolesPropiosString" name="GolesPropiosString" value="@Model.GolesPropiosString" style="width: 40px;text-align: center;height: 25px"/>
                                <label>-</label>
                                <input type="text" id="GolesRivalString" name="GolesRivalString" value="@Model.GolesRivalString" style="width: 40px;text-align: center;height: 25px"/>
                                 @Model.Rival
                            }
                            else
                            {
                                @Model.Rival
                                <input type="text" id="GolesRivalString" name="GolesRivalString" value="@Model.GolesRivalString" style="width: 40px;text-align: center;height: 25px"/>
                                <label>-</label>
                                <input type="text" id="GolesPropiosString" name="GolesPropiosString" value="@Model.GolesPropiosString" style="width: 40px;text-align: center;height: 25px"/>
                                 @Model.EquipoNombre
                            }
                        </p>
                    </div>
                </div> 
                <div style="text-align: right">
                    @*<p><strong>Minutos Jugados:</strong> <input type="text" id="DuracionString" name="DuracionString" value="@Model.DuracionString"/>*@
                    <input class="btn btn-primary" name="accion" type="submit" value="Imprimir" />
                </div>        
                
                <div class="well">
                    <div class="titleDatos"><span class="label label-default">Datos Partido</span></div>
                    <div id="grid">       
                            @gridDatosJugadores.GetHtml(
                            headerStyle: "encabezado-grid",
                            tableStyle: "table table-striped",
                            fillEmptyRows: false,
                            footerStyle: "pie-grid",
                            alternatingRowStyle: "fila-alternativa",
                            
                            columns:
                                gridDatosJugadores.Columns
                                (
                                gridDatosJugadores.Column("NumeroCamiseta", "Nº", format: item => rowNum = rowNum + 1),
                                gridDatosJugadores.Column("Nombre"),
                                gridDatosJugadores.Column("Apellido"),
                                gridDatosJugadores.Column("", format: (item) => Html.Hidden("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].Id", (object)item.Id)),                                                              
                                gridDatosJugadores.Column("MinutosJugadosString","M J", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinutosJugadosString", (object)item.MinutosJugadosString, new { @class = "inputDatosPartido" })),
                                gridDatosJugadores.Column("CalificacionString", "Calif", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].CalificacionString", (object)item.CalificacionString, new { @class = "inputDatosPartido" })),
                                //gridDatosJugadores.Column("CambioString", "Cambio" , format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].CambioString", (object)item.CambioString, new { @class = "inputDatosPartido" })),
                                gridDatosJugadores.Column("GolString","Goles", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].GolString", (object)item.GolString, new { @class = "inputDatosPartido" })),
                                gridDatosJugadores.Column("MinPrimeraAmarillaString","A1", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinPrimeraAmarillaString", (object)item.MinPrimeraAmarillaString, new { @class = "inputDatosPartido" })),
                                gridDatosJugadores.Column("MinSegundaAmarillaString","A2", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinSegundaAmarillaString", (object)item.MinSegundaAmarillaString, new { @class = "inputDatosPartido" })),
                                gridDatosJugadores.Column("MinRojaString","R", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].MinRojaString", (object)item.MinRojaString, new { @class = "inputDatosPartido" })),
                                gridDatosJugadores.Column("Observaciones", format: (item) => Html.TextBox("JugadoresPartidoList[" + (rowNum - 1).ToString() + "].Observaciones", (object)item.Observaciones))
                               
                                ), mode: WebGridPagerModes.Numeric)    
                    </div> 
                </div>   
                <div align="right">
                    <input class="btn btn-primary" name="accion" type="submit" value="Guardar" /> 
                    @*<button class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg">Large modal</button>*@   
                </div>
                
                @*<div id="modalGoles" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">Cargar Goles</h4>
                            </div>
                            <div class="modal-body">
                                <div>       
                                    @gridGolesPartido.GetHtml(
                                        headerStyle: "encabezado-grid",
                                        tableStyle: "table table-striped",
                                        fillEmptyRows: false,
                                        footerStyle: "pie-grid",
                                        alternatingRowStyle: "fila-alternativa",
                            
                                        columns:
                                            gridGolesPartido.Columns
                                                (
                                                    gridGolesPartido.Column("NumeroCamiseta", "Nº", format: item => rowNumG = rowNumG + 1),
                                                    gridGolesPartido.Column("Nombre"),
                                                    gridGolesPartido.Column("Apellido"),
                                                    gridGolesPartido.Column("", format: (item) => Html.Hidden("GolesPartidoList[" + (rowNumG - 1).ToString() + "].GolesPorJugadorId", (object)item.GolesPorJugadorId)),                                                                                                  
                                                    gridGolesPartido.Column("MinutosGolString","Minutos", format: (item) => Html.TextBox("GolesPartidoList[" + (rowNumG - 1).ToString() + "].MinutosGolString", (object)item.MinutosGolString, new { @class = "inputDatosPartido"})),
                                                    gridGolesPartido.Column("Descripcion", "Caracteísticas", format: (item) => Html.TextBox("GolesPartidoList[" + (rowNumG - 1).ToString() + "].Descripcion", (object)item.Descripcion)),
                                                    gridGolesPartido.Column("UrlVideo", "Enlace Video", format: (item) => Html.TextBox("GolesPartidoList[" + (rowNumG - 1).ToString() + "].UrlVideo", (object)item.UrlVideo))          
                               
                                                ), mode: WebGridPagerModes.Numeric)    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
                @*<script>
                    var abrirPopup = $('#AbrirPopup').val();
                    if (abrirPopup == "true") {
                        $('#modalGoles').addClass('in');
                        $('#modalGoles').css('display', 'block');
                    }
                </script>*@
                
                      
                        @if (Model.GolesPartidoList.Count > 0)
                        {
                            
                            <div class="well" >
                                <div class="titleDatos"><span class="label label-default">Goles a favor</span></div>   
                                <div>  
                                    @gridGolesPartido.GetHtml(
                                        headerStyle: "encabezado-grid",
                                        tableStyle: "table table-striped",
                                        fillEmptyRows: false,
                                        footerStyle: "pie-grid",
                                        alternatingRowStyle: "fila-alternativa",

                                        columns:
                                            gridGolesPartido.Columns
                                                (
                                                    gridGolesPartido.Column("NumeroCamiseta", "Nº", format: item => rowNumG = rowNumG + 1),
                                                    gridGolesPartido.Column("Nombre"),
                                                    gridGolesPartido.Column("Apellido"),
                                                    gridGolesPartido.Column("", format: (item) => Html.Hidden("GolesPartidoList[" + (rowNumG - 1).ToString() + "].GolesPorJugadorId", (object) item.GolesPorJugadorId)),
                                                    gridGolesPartido.Column("MinutosGolString", "Minutos", format: (item) => Html.TextBox("GolesPartidoList[" + (rowNumG - 1).ToString() + "].MinutosGolString", (object) item.MinutosGolString, new {@class = "inputDatosPartido"})),
                                                    gridGolesPartido.Column("Descripcion", "Caracteísticas", format: (item) => Html.TextBox("GolesPartidoList[" + (rowNumG - 1).ToString() + "].Descripcion", (object) item.Descripcion)),
                                                    gridGolesPartido.Column("UrlVideo", "Enlace Video", format: (item) => Html.TextBox("GolesPartidoList[" + (rowNumG - 1).ToString() + "].UrlVideo", (object) item.UrlVideo))

                                                ), mode: WebGridPagerModes.Numeric)
                                    
                                </div>
                            </div>
                             <input class="btn btn-primary pull-right" name="accion" type="submit" value="Cargar Goles" />
                        }
            </fieldset>
        }
    </div>
</div>
<style>
    .inputDatosPartido {
        width: 40px;
        text-align: center;
         background-color: #999999;
    color: #fff;
    font-size: 16px;
    }
</style>