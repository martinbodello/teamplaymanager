@using System.Web.Mvc
@using System.Web.Mvc.Html
@model TPM.Models.ViewModel.AssignarJugadoresViewModel

@{
    ViewBag.Title = "Asignar Jugadores";
    Layout = "~/Views/Shared/_Layout.cshtml";
    WebGrid gridJugadores = new WebGrid(Model.ListaJugadores, rowsPerPage: 10);
    WebGrid gridJugadoresConvocados = new WebGrid(Model.ListaJugadoresAsignados, rowsPerPage: 11, fieldNamePrefix: "order");
}

<div class="panel panel-primary">
  <div class="panel-heading">Planilla de citación
      <div class="pull-right">
          <a class="link-panel" href="/Partido">
             <img src="~/Images/boton_volver.png" />
              Volver
          </a>
      </div>
  </div>
  <div class="panel-body">
<label>División: @Model.PartidoSeleccionado.EquipoNombre</label>
<label>Categoría: 93 - 94 - 95 (Falta traerlas BD)</label>
      
<label>Fecha Nº: (Falta en BD)</label>
<label>Riva: @Model.PartidoSeleccionado.Rival</label>   
<label>Hora de Citación: (Cargar en create de partido)</label>
<label>Hora de inicio de partido: @Model.Hora</label>
<label>Fecha: @Model.Fecha</label>
<label>Cancha: (falta traer de BD)</label>
<label>Condición: @Model.PartidoSeleccionado.Local</label>
<label>Lugar: (falta en BD)</label>

<h2>TITULARES</h2>
<div class="row">
    <div class="col-xs-6">
        @gridJugadoresConvocados.GetHtml(
            fillEmptyRows: true,
            alternatingRowStyle: "fila-alternativa",
            headerStyle: "encabezado-grid",
            footerStyle: "pie-grid",
            mode: WebGridPagerModes.All,
            firstText: "<< Primera",
            previousText: "< Anterior",
            nextText: "Siguiente >",
            lastText: "Última >>",
            tableStyle: "table table-striped",

            columns: new[]
            {
                gridJugadoresConvocados.Column("Nombre"),
                gridJugadoresConvocados.Column("Apellido"),
                gridJugadoresConvocados.Column("Categoria"),
                gridJugadoresConvocados.Column("",
                    header: "Acciones",
                    format: @<text>
                                 <input type="button" value="Borrar" id=@item.Id onClick=" BorrarJugadorConvocado(@item.Id) "/>
                             </text>
                    )
            })
    </div>
    <div class="col-xs-6">
        @gridJugadores.GetHtml(
                                      fillEmptyRows: false,
                                      alternatingRowStyle: "fila-alternativa",
                                      headerStyle: "encabezado-grid",
                                      footerStyle: "pie-grid",
                                      mode: WebGridPagerModes.All,
                                      firstText: "<< Primera",
                                      previousText: "< Anterior",
                                      nextText: "Siguiente >",
                                      lastText: "Última >>",
                                      tableStyle: "table table-striped",

                                      columns: new[]
                                      {
                                          gridJugadores.Column("Nombre"),
                                          gridJugadores.Column("Apellido"),
                                          gridJugadores.Column("Categoria"),
                                          gridJugadores.Column("",
                                              header: "Acciones",
                                              format: @<text>
                                                           <input type="button" value="Convocar" id=@item.Id onClick=" ConvocarJugador(@item.Id) "/>
                                                       </text>
                                              )
                                      })
    </div>
</div>
  


      @Html.ValidationSummary(true)

    
    <div class="well">
        <div class="titleDatos"><span class="label label-default">Jugadores Convocados</span></div>
        @using (Html.BeginForm("ConvocarJugadores", "Partido", FormMethod.Get))
        {
            <h3>@Html.DisplayName("Jugadores")</h3>
                        <div class="pull-right">
                            <a class="link-panel" href="/Jugador/Create">
                                <img src="~/Images/boton_nuevo.png" />
                                Nuevo jugador
                            </a>
                        </div>
                        <div>
                            @Html.Label("Nombre")
                            @Html.TextBoxFor(model => Model.NombreFiltro)
                        </div>
                        <div>
                            @Html.Label("Apellido")
                            @Html.TextBoxFor(model => model.ApellidoFiltro)
                        </div>

                        @*@Html.Label("Categoria")
                                  @Html.DropDownListFor(model => model.CategoriaId, new SelectList(Model.CategoriaList, "CategoriaId", "NombreCategoria", 1))*@

                        @Html.HiddenFor(model => model.PartidoSeleccionado.PartidoId, new { id = "hidden" })

                        <input type="submit" value="Buscar" />
            <div class="row">
                <div class="col-xs-12">
                    @if (Model.ListaJugadores != null)
                        {
                                  @gridJugadores.GetHtml(
                                      fillEmptyRows: false,
                                      alternatingRowStyle: "fila-alternativa",
                                      headerStyle: "encabezado-grid",
                                      footerStyle: "pie-grid",
                                      mode: WebGridPagerModes.All,
                                      firstText: "<< Primera",
                                      previousText: "< Anterior",
                                      nextText: "Siguiente >",
                                      lastText: "Última >>",
                                      tableStyle: "table table-striped",

                                      columns: new[]
                                      {
                                          gridJugadores.Column("Nombre"),
                                          gridJugadores.Column("Apellido"),
                                          gridJugadores.Column("Categoria"),
                                          gridJugadores.Column("",
                                              header: "Acciones",
                                              format: @<text>
                                                           <input type="button" value="Convocar" id=@item.Id onClick=" ConvocarJugador(@item.Id) "/>
                                                       </text>
                                              )
                                      })
                        }
                        else
                        {
                                  <div>@Html.DisplayName("No se han encontrado resultados")</div>
                        }
                </div>
                @*<div class="col-xs-6">
                    @Html.ValidationSummary(true)

                        @if (Model.ListaJugadoresAsignados != null)
                        {

                            @gridJugadoresConvocados.GetHtml(
                                fillEmptyRows: false,
                                alternatingRowStyle: "fila-alternativa",
                                headerStyle: "encabezado-grid",
                                footerStyle: "pie-grid",
                                mode: WebGridPagerModes.All,
                                firstText: "<< Primera",
                                previousText: "< Anterior",
                                nextText: "Siguiente >",
                                lastText: "Última >>",
                                tableStyle: "table table-striped",

                                columns: new[]
                                {
                                    gridJugadoresConvocados.Column("Nombre"),
                                    gridJugadoresConvocados.Column("Apellido"),
                                    gridJugadoresConvocados.Column("Categoria"),
                                    gridJugadoresConvocados.Column("",
                                        header: "Acciones",
                                        format: @<text>
                                                     <input type="button" value="Borrar" id=@item.Id onClick=" BorrarJugadorConvocado(@item.Id) "/>
                                                 </text>
                                        )
                                })
                        }
                        else
                        {
                            <div>@Html.DisplayName("Este equipo no tiene asignado ningun jugador")</div>
                        }
                </div>*@
            </div>
        }
    </div>
                   

    <script type="text/javascript">
        var JugadoresAsignados = [];
        var JugadorEquipoEliminar = [];

        function ConvocarJugador(idParam) {
            $('.btnPrint').removeClass('disable');
            $('.btnPrint').addClass('enable');
            var partidoId = $('#hidden').val();
            var datos = "{'IdJugador':'"+ idParam +"','IdPartido':'" + partidoId + "'}";

            $.ajax({
                url: '@Url.Action("ConvocarJugador", "Partido")',
                type: 'POST',
                data: datos,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    location.href="";
                },
                error: function (jqXHR, textStatus, error) {

                    alert("error: " + jqXHR.responseText);
                }
            });
     }
        function BorrarJugadorConvocado(idParam) {
            var r = confirm("Seguro desea eliminar este jugador del equipo??");
            if(r == true){
                var partidoId = $('#hidden').val();
                var datos = "{'IdJugador':'"+ idParam +"','IdPartido':'" + partidoId + "'}";

                $.ajax({

                    url: '@Url.Action("BorrarJugadorConvocado", "Partido")',
                type: 'POST',
                data: datos,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    location.href="";
                },
                error: function (jqXHR, textStatus, error) {

                    alert("error: " + jqXHR.responseText);
                }
            });
            }
        }

</script>