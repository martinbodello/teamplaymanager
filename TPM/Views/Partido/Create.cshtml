@using System.Web.Mvc
@using System.Web.Mvc.Html
@model TPM.Models.Partido
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    WebGrid gridJugadores = new WebGrid(Model.JugadoresViewModel.ListaJugadores, rowsPerPage: 10);
    WebGrid gridJugadoresAsignados = new WebGrid(Model.JugadoresViewModel.ListaJugadoresAsignados, rowsPerPage: 10, fieldNamePrefix: "order");
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Crear Partido
        <div class="pull-right">
            <a class="link-panel" href="@ViewBag.returnUrl">
                <img src="~/Images/boton_volver.png" />
                Volver
            </a>
        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Create", "Partido", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
            @*<input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />*@

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Partido</legend>
                <div class="well">
                    <div class="titleDatos"><span class="label label-default">Datos Partido</span></div>

                    <table class="tablaCreate" width="100%">
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Temporada:")
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.TemporadaId, new SelectList(Model.TemporadasList, "TemporadaId", "TemporadaNombre", 1))
                            </td>
                        </tr>
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Tipo:")
                            </td>
                            <td>
                                <select name="TipoPartidoNombre" id="TipoPartidoNombre">
                                    <option value="Amistoso">Amistoso</option>
                                    <option value="Liga">Liga</option>
                                    <option value="Campeonato">Campeonato</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Equipo:")
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.EquipoId, new SelectList(Model.EquiposList, "Id", "NombreEquipo", 1))
                            </td>
                        </tr>
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Rival:")
                            </td>
                            <td>
                                @Html.EditorFor(model => model.Rival)
                                @Html.ValidationMessage("Nombre", "Por favor, ingrese el rival")
                            </td>
                        </tr>
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Fecha:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.FechaHoraInicioString)
                            </td>
                        </tr>
                        <script type="text/javascript">
                            $(function() {
                                $("#FechaHoraInicioString").datetimepicker({
                                    format: 'd.m.Y H:i'
                                });
                            });
                        </script>
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Local:")
                            </td>
                            <td>
                                <input type="checkbox" id="Local" name="Local" value="L">
                            </td>
                        </tr>
                        <tr>
                            <td class="primerColumna">
                                @Html.Label("Lugar:")
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.LocalidadId, new SelectList(Model.LocalidadLista, "LocalidadId", "LocalidadNombre", 1)) 

                            </td>
                        </tr>
                    </table>
                </div>
                
                @if (Model.PartidoId != (-1))
                {
                @*Jugadores Convocados*@
                    <div class="well">
                        <div class="titleDatos"><span class="label label-default">Jugadores Convocados</span></div>
                        @using (Html.BeginForm(null, null, FormMethod.Get))
                        {
                            <table class="tablaCreate" width="100%">
                                <tr>
                                    <td>             
                                        <h3>@Html.DisplayName("Jugadores")</h3>
                                        <div class="pull-right">
                                            <a class="link-panel" href="/Jugador/Create">
                                                <img src="~/Images/boton_nuevo.png" />
                                                Nuevo jugador
                                            </a>
                                        </div>
                                        <div>
                                            @Html.Label("Nombre")
                                            @Html.TextBoxFor(model => Model.JugadoresViewModel.NombreFiltro)
                                        </div>
                                        <div>
                                            @Html.Label("Apellido")
                                            @Html.TextBoxFor(model => model.JugadoresViewModel.ApellidoFiltro)
                                        </div>

                                        @*@Html.Label("Categoria")
                                  @Html.DropDownListFor(model => model.CategoriaId, new SelectList(Model.CategoriaList, "CategoriaId", "NombreCategoria", 1))*@

                                        @Html.HiddenFor(model => model.JugadoresViewModel.EquipoSeleccionado.Id, new {id = "hidden"})

                                        <input type="submit" value="Buscar" />
                                        @if (Model.JugadoresViewModel.ListaJugadores != null)
                                        {
                                            @gridJugadores.GetHtml(
                                                fillEmptyRows: false,
                                                alternatingRowStyle: "fila-alternativa",
                                                headerStyle: "encabezado-grid",
                                                footerStyle: "pie-grid",
                                                mode: WebGridPagerModes.All,
                                                firstText: "<< Primera",
                                                previousText: "< Anterior",
                                                nextText: "Siguiente >",
                                                lastText: "Última >>",
                                                tableStyle: "table table-striped",

                                                columns: new[]
                                                {
                                                    gridJugadores.Column("Nombre"),
                                                    gridJugadores.Column("Apellido"),
                                                    gridJugadores.Column("Categoria"),
                                                    gridJugadores.Column("",
                                                        header: "Acciones",
                                                        format: @<text>
                                                                     <input type="button" value="Convocar" id=@item.Id onClick=" ConvocarJugador(@item.Id) "/>
                                                                 </text>
                                                        )
                                                })
                                        }
                                        else
                                        {
                                            <div>@Html.DisplayName("No se han encontrado resultados")</div>
                                        }

                                    </td>

                                    <td>
                                        @Html.ValidationSummary(true)

                                        @if (Model.JugadoresViewModel.ListaJugadoresAsignados != null)
                                        {

                                            @gridJugadoresAsignados.GetHtml(
                                                fillEmptyRows: false,
                                                alternatingRowStyle: "fila-alternativa",
                                                headerStyle: "encabezado-grid",
                                                footerStyle: "pie-grid",
                                                mode: WebGridPagerModes.All,
                                                firstText: "<< Primera",
                                                previousText: "< Anterior",
                                                nextText: "Siguiente >",
                                                lastText: "Última >>",
                                                tableStyle: "table table-striped",

                                                columns: new[]
                                                {
                                                    gridJugadoresAsignados.Column("Nombre"),
                                                    gridJugadoresAsignados.Column("Apellido"),
                                                    gridJugadoresAsignados.Column("Categoria"),
                                                    gridJugadoresAsignados.Column("",
                                                        header: "Acciones",
                                                        format: @<text>
                                                                     <input type="button" value="Borrar" id=@item.Id onClick=" BorrarJugadorConvocado(@item.Id) "/>
                                                                 </text>
                                                        )
                                                })
                                        }
                                        else
                                        {
                                            <div>@Html.DisplayName("Este equipo no tiene asignado ningun jugador")</div>
                                        }
                                    </td>
                                </tr>
                            </table>
                        }
                    </div>
                }
                
                <input class="btn btn-primary" type="submit" value="Guardar" />

            </fieldset>
            <link href="~/Scripts/Bootstrap/datetimepicker-master/jquery.datetimepicker.css" rel="stylesheet" />
            <script src="~/Scripts/Bootstrap/datetimepicker-master/jquery.js"></script>
            <script type="text/javascript" src="~/Scripts/Bootstrap/datetimepicker-master/jquery.datetimepicker.js"></script>
        }
    </div>
</div>

<script type="text/javascript">
    var JugadoresConvocados = [];
    var JugadorPartidoEliminar = [];

    function ConvocarJugador(idParam) {
        $('.btnPrint').removeClass('disable');
        $('.btnPrint').addClass('enable');
        var partidoId = $('#hidden').val();
        var datos = "{'IdJugador':'"+ idParam +"','IdPartido':'" + partidoId + "'}";

        @*$.ajax({
            url: '@Url.Action("ConvocarJugador", "Partido")',
            type: 'POST',
            data: datos,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                location.href="";
            },
            error: function (jqXHR, textStatus, error) {

                alert("error: " + jqXHR.responseText);
            }
        });*@
    }
    function BorrarJugadorConvocado(idParam) {
        var r = confirm("Seguro desea eliminar este jugador del equipo??");
        if(r == true){
            $('.btnPrint').removeClass('disable');
            $('.btnPrint').addClass('enable');
            var equipoId = $('#hidden').val();
            var datos = "{'IdJugador':'"+ idParam +"','IdEquipo':'" + equipoId + "'}";

            @*$.ajax({
                url: '@Url.Action("BorrarJugadorConvocado", "Partido")',
                type: 'POST',
                data: datos,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    location.href="";
                },
                error: function (jqXHR, textStatus, error) {

                    alert("error: " + jqXHR.responseText);
                }
            });*@
        }
    }
</script>